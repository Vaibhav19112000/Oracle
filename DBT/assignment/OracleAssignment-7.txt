create following tables and solve following questions
1. faculty(fid(PK),fname,sp.skill1,sp.skill2)
   
    CREATE TABLE faculty(
   fid number primary key,
   fname varchar2(20) not null,
   sp_skill1 varchar2(30),
   sp_skill2 varchar2(30));

2. courses(cid(PK),cname,rid,fid(FK))

   CREATE TABLE Courses(
   cid number primary key,
   cname varchar2(15) not null,
   rid number, 
   fid number,
   foreign key(rid) references room(rid) on delete set null,
   foreign key(fid) references faculty(fid) on delete set null);

3. room(roomid,rname,rloc)

   CREATE TABLE room(
   rid number primary key,
   rname varchar2(15) not null,
   rloc varchar2(20));

faculty
fid fname spskill1 spskill2
10 Amol database JAVA
11 Asha JAVA MySQL
12 Kiran CPP Database
13 Seeta MySQL database

courses
cid cname rid fid
121 DBDA 100 10
131 DAC 101
141 DTISS
151 DIOT 105 12

    INSERT into courses values(121,'DBDA',100, 10);
    INSERT into courses (cid, cname, rid) values(131,'DAC',101);
    INSERT into courses (cid, cname) values(141,'DTISS');
    INSERT into courses values(151,'DIOT',105, 12);

Room
roomid rname rloc
100 jasmin 1st floor
101 Rose 2nd floor
105 Lotus 1st floor
103 Mogra 1st floor


INSERT room values(100,'Jasmin','1st floor');
INSERT room values(101,'Rose','2nd floor');
INSERT room values(105,'Lotus','1st floor');
INSERT room values(103,'Mogra','1st floor');

1. list all courses for which no room is assigned and all rooms which are available
ans:-select * from courses c where not exists ( select r.rid from room r where c.rid=r.rid);

2. list all faculties who are not allocated to any course and rooms which are not allocated to any course
ans:- select * from faculty f where not exists(select c.fid from courses c where f.fid =c.fid);
 
3. list all rooms which are allocated or not allocated to any courses
ans:- select * from room cross join  courses where courses.rid = room.rid ;

4. list all rooms which are not allocated to any courses
ans:- select rid,rname from room where not exists (select * from course where c.rid=r.rid);

5. display courses and faculty assigned to those courses whose special skill is database


6. display time table --- it should contain course details , faculty and room details4:47 AM 18-Apr-234:47 AM 18-Apr-234:47 AM 18-Apr-234:47 AM 18-Apr-23b vg v v
jjjjjjjjjjjjjj


7.create table Product(
   pid number primary key,
   pname varchar2(20),
   price number(6,2) default 20.00,
   qty number check(qty>0),
   cid number ,
   sid number,
   constraint fk_cid foreign key(cid) references category(cid) on delete set null,
   constraint fk_sid foreign key(sid) references salesman(sid)  
   );


prodid pname qty price catid sid
123 lays 30 30.00 1 12
111 pepsi 40 50.00 4 11
134 nachos 50 50.00 1 12
124 dairy milk 40 60.00 2 14
124 pringles 40 60.00 1 14

    INSERT into   product values(123,'lays',30,30.00,1,12);
    INSERT into   product values(111,'pepsi',40,50.00,4,11);
    INSERT into   product values(134,'nachos',50,50.00,1,12);
    INSERT into   product values(124,'dairy milk',40,60.00,2,14);
    INSERT into   product values(125,'pringles',40,60.00,1,14);

    
saleman ----- sname -----not null
sid sname city
11 Rahul Pune

12 Kirti Mumbai
13 Prasad Nashik
14 Arnav Amaravati
 
    create table salesman(
   sid number primary key,
   sname varchar2(15) unique not null,
   city varchar2(15));

    INSERT into   salesman values(11,'Rahul','Pune');
    
    INSERT into   salesman values(12,'Kirti','Mumbai');
 
    INSERT into   salesman values(13,'Prasad','Nashik');
    INSERT into   salesman values(14,'Arnav','Amravati');
  
category ---- cname unique and not null
cid cname description
1 chips very crunchy
2 chocolate very chocolaty
3 snacks yummy
4 cold drinks thanda thanda cool cool

   create table category(
   cid number primary key,
   cname varchar2(15) unique not null,
   description varchar2(30));


   INSERT into  category values(1,'chips','crunchy');
   INSERT into   category values(2,'chocolate','very chocolaty');
   INSERT into   category values(3,'snacks','yummy');
   INSERT into   category values(4,'cold drinks','thanda thanda cool cool');

1. List all products with category chips
 
2. display all products sold by kirti

3. display all salesman who did not sell any product

4. display all category for which no product is there

5. display all products with no category assigned

6. list all salesman who stays in city with name starts with P or N

7. add new column in salesman table by name credit limit.

8. Write a query which will display dept no and dept names to which no employee is assigned for emp and dept table.


 
 